{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Torixyna Project Documentation Warning This project is only available on Windows. Project presentation : Torixyna is an innovative library designed to simplify and optimize application development on Windows. Its goal is to reduce the amount of code needed to accomplish basic system tasks, using native Windows libraries. By centralizing and simplifying access to essential operating system features, Torixyna allows developers to save valuable time and focus on what matters: business logic and innovation. project objective : On Windows, developers are often faced with the need to manage complex and redundant system operations for each new application. Whether managing files, manipulating registers, or interacting with the network, each functionality often requires a considerable amount of code. Torixyna aims to abstract these interactions, providing simplified methods to accomplish common actions without reinventing the wheel each time. The goal is to offer a faster, more robust and simpler development library, while exploiting the powerful libraries implemented by Windows. Main features : Windows Libraries Abstraction : All essential functions (file management, registries, processes, security, etc.) are encapsulated in simplified classes and functions. Reduced redundancy: Eliminates code duplication by providing high-level methods for recurring actions. Saves time : Allows you to focus on more complex aspects of the project without wasting time on trivial tasks. Extensible and modular : Easy to integrate into any Windows project, with customizable and extensible features. Why choose Torixyna? Simplicity : With its modular design, Torixyna reduces the complexity of interacting with Windows APIs. Performance : Using native Windows libraries, the library is optimized to run smoothly and efficiently. Save time : No more complex coding for each project, Torixyna offers you ready-to-use solutions. Contributors Creator of the library : Tina Support for other projects OpenCVE Information Author : Tina Date : 03/01/2025 Version : 1.0.0 Copyright : 2025 Tina - All rights reserved","title":"Home"},{"location":"index.html#torixyna-project-documentation","text":"Warning This project is only available on Windows. Project presentation : Torixyna is an innovative library designed to simplify and optimize application development on Windows. Its goal is to reduce the amount of code needed to accomplish basic system tasks, using native Windows libraries. By centralizing and simplifying access to essential operating system features, Torixyna allows developers to save valuable time and focus on what matters: business logic and innovation. project objective : On Windows, developers are often faced with the need to manage complex and redundant system operations for each new application. Whether managing files, manipulating registers, or interacting with the network, each functionality often requires a considerable amount of code. Torixyna aims to abstract these interactions, providing simplified methods to accomplish common actions without reinventing the wheel each time. The goal is to offer a faster, more robust and simpler development library, while exploiting the powerful libraries implemented by Windows. Main features : Windows Libraries Abstraction : All essential functions (file management, registries, processes, security, etc.) are encapsulated in simplified classes and functions. Reduced redundancy: Eliminates code duplication by providing high-level methods for recurring actions. Saves time : Allows you to focus on more complex aspects of the project without wasting time on trivial tasks. Extensible and modular : Easy to integrate into any Windows project, with customizable and extensible features. Why choose Torixyna? Simplicity : With its modular design, Torixyna reduces the complexity of interacting with Windows APIs. Performance : Using native Windows libraries, the library is optimized to run smoothly and efficiently. Save time : No more complex coding for each project, Torixyna offers you ready-to-use solutions.","title":"Torixyna Project Documentation"},{"location":"index.html#contributors","text":"Creator of the library : Tina","title":"Contributors"},{"location":"index.html#support-for-other-projects","text":"OpenCVE","title":"Support for other projects"},{"location":"index.html#information","text":"Author : Tina Date : 03/01/2025 Version : 1.0.0 Copyright : 2025 Tina - All rights reserved","title":"Information"},{"location":"Torixyna/1.0.0/Torixyna.html","text":"Torixyna Modules 1. Privilege Management Warning Elevating privileges is not fully functional yet and may cause bugs. documentation not finished in maintenance privileges management module Link to the Documentation Privileges 2. Speaker Management speaker management module Link to the Documentation Speaker","title":"Torixyna"},{"location":"Torixyna/1.0.0/Torixyna.html#torixyna-modules","text":"","title":"Torixyna Modules"},{"location":"Torixyna/1.0.0/Torixyna.html#1-privilege-management","text":"Warning Elevating privileges is not fully functional yet and may cause bugs. documentation not finished in maintenance privileges management module","title":"1. Privilege Management"},{"location":"Torixyna/1.0.0/Torixyna.html#link-to-the-documentation","text":"Privileges","title":"Link to the Documentation"},{"location":"Torixyna/1.0.0/Torixyna.html#2-speaker-management","text":"speaker management module","title":"2. Speaker Management"},{"location":"Torixyna/1.0.0/Torixyna.html#link-to-the-documentation_1","text":"Speaker","title":"Link to the Documentation"},{"location":"Torixyna/1.0.0/Privileges/index.html","text":"PrivilegesManager.hpp Warning Attention ce module n'est pas terminer il y a encore des bug \u00e0 corrig\u00e9 notamment aux niveaux de l'\u00e9l\u00e9vation ce fichier appartenant aux modules Privilege. dans le namespace Torixyna::Privileges enum class PrivilegeLevel : permet d'avoir un code assigner \u00e0 un niveau de privil\u00e8ge que ce soit syst\u00e8me, user, ou autre... struct PrivilegeStatus : Cette structur permet de stocker des donn\u00e9 que les m\u00e9thode de la class PrivilegesManager vous retourneron PrivilegesManager : Cette class contient toutes les m\u00e9thodes permettant l'utilisation facile des privil\u00e8ges pour plus de detaille concernant ce fichier ayez l'obligence de lir la doc nous vous avons fournis des examples de code et bien tout detailler... Link to the Documentation PrivilegesManager","title":"Index"},{"location":"Torixyna/1.0.0/Privileges/index.html#privilegesmanagerhpp","text":"Warning Attention ce module n'est pas terminer il y a encore des bug \u00e0 corrig\u00e9 notamment aux niveaux de l'\u00e9l\u00e9vation ce fichier appartenant aux modules Privilege. dans le namespace Torixyna::Privileges enum class PrivilegeLevel : permet d'avoir un code assigner \u00e0 un niveau de privil\u00e8ge que ce soit syst\u00e8me, user, ou autre... struct PrivilegeStatus : Cette structur permet de stocker des donn\u00e9 que les m\u00e9thode de la class PrivilegesManager vous retourneron PrivilegesManager : Cette class contient toutes les m\u00e9thodes permettant l'utilisation facile des privil\u00e8ges pour plus de detaille concernant ce fichier ayez l'obligence de lir la doc nous vous avons fournis des examples de code et bien tout detailler...","title":"PrivilegesManager.hpp"},{"location":"Torixyna/1.0.0/Privileges/index.html#link-to-the-documentation","text":"PrivilegesManager","title":"Link to the Documentation"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html","text":"PrivilegesManager Description The PrivilegesManager module allows you to manage the PC privileges simply and efficiently. Features Retrieve the privileges of your program at runtime. Elevate these privileges. Compilation To use the PrivilegesManager module, you must compile your program with the following options: g++ -o t.exe t.cpp -lTorixyna & color Method : getVolume() Description : Allows you to retrieve the current volume value. Settings : None : No settings. Returned value : float : Returns the current volume. Example of use : #include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; float resultat = sound.getVolume(); std::cout << resultat << std::endl; return 0; } Method : setVolume() Description : Allows you to set the volume level of the audio device. This function takes a float number between 0 and 100, representing volume as a percentage. Settings : float volume : The volume to define must be a number between 0.0 and 100.0 (inclusive). Returned value : bool : Returns true if the volume was correctly modified, false in case of error. Example of use : #include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; if(sound.setVolume(50.0f) == true){ std::cout << \"Sucess\" << std::endl; }else{ std::cout << \"Error\" << std::endl; } return 0; }","title":"PrivilegesManager"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#privilegesmanager","text":"","title":"PrivilegesManager"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#description","text":"The PrivilegesManager module allows you to manage the PC privileges simply and efficiently.","title":"Description"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#features","text":"Retrieve the privileges of your program at runtime. Elevate these privileges.","title":"Features"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#compilation","text":"To use the PrivilegesManager module, you must compile your program with the following options: g++ -o t.exe t.cpp -lTorixyna & color","title":"Compilation"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#method-getvolume","text":"Description : Allows you to retrieve the current volume value.","title":"Method : getVolume()"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#settings","text":"None : No settings.","title":"Settings :"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#returned-value","text":"float : Returns the current volume.","title":"Returned value :"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#example-of-use","text":"#include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; float resultat = sound.getVolume(); std::cout << resultat << std::endl; return 0; }","title":"Example of use :"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#_1","text":"","title":""},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#method-setvolume","text":"Description : Allows you to set the volume level of the audio device. This function takes a float number between 0 and 100, representing volume as a percentage.","title":"Method : setVolume()"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#settings_1","text":"float volume : The volume to define must be a number between 0.0 and 100.0 (inclusive).","title":"Settings :"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#returned-value_1","text":"bool : Returns true if the volume was correctly modified, false in case of error.","title":"Returned value :"},{"location":"Torixyna/1.0.0/Privileges/PrivilegesManager.html#example-of-use_1","text":"#include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; if(sound.setVolume(50.0f) == true){ std::cout << \"Sucess\" << std::endl; }else{ std::cout << \"Error\" << std::endl; } return 0; }","title":"Example of use :"},{"location":"Torixyna/1.0.0/Speaker/index.html","text":"Speaker.hpp Warning ce fichier appartenant aux modules Speaker. dans le namespace Torixyna::Speaker Speaker : Cette classe contient toutes les m\u00e9thodes permettant d'utiliser facilement le haut-parleur Windows, comme r\u00e9cup\u00e9rer le volume actuel, modifier le volume, etc. Pour plus de d\u00e9tails sur ce fichier, veuillez vous r\u00e9f\u00e9rer \u00e0 la documentation. Nous avons fourni des exemples de code et tout expliqu\u00e9 en d\u00e9tail... Link to the Documentation Speaker.hpp","title":"Index"},{"location":"Torixyna/1.0.0/Speaker/index.html#speakerhpp","text":"Warning ce fichier appartenant aux modules Speaker. dans le namespace Torixyna::Speaker Speaker : Cette classe contient toutes les m\u00e9thodes permettant d'utiliser facilement le haut-parleur Windows, comme r\u00e9cup\u00e9rer le volume actuel, modifier le volume, etc. Pour plus de d\u00e9tails sur ce fichier, veuillez vous r\u00e9f\u00e9rer \u00e0 la documentation. Nous avons fourni des exemples de code et tout expliqu\u00e9 en d\u00e9tail...","title":"Speaker.hpp"},{"location":"Torixyna/1.0.0/Speaker/index.html#link-to-the-documentation","text":"Speaker.hpp","title":"Link to the Documentation"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html","text":"Speaker Module Description The Speaker module allows you to manage the PC volume simply and efficiently. Features Retrieve the current volume. Check the volume state to determine if it is muted or not. Modify the volume state (mute or unmute). Adjust the volume level between 0.0f and 100.0f . Compilation To use the Speaker module, you must compile your program with the following options: g++ -o test.exe test.cpp -lTorixyna -lole32 -lstdc++ -luuid & color Method : getVolume() Description : Allows you to retrieve the current volume value. Settings : None : No settings. Returned value : float : Returns the current volume. Example of use : #define INCLUDE_SPEAKER #include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; float resultat = sound.getVolume(); std::cout << resultat << std::endl; return 0; } Method : setVolume() Description : Allows you to set the volume level of the audio device. This function takes a float number between 0 and 100, representing volume as a percentage. Settings : float volume : The volume to define must be a number between 0.0 and 100.0 (inclusive). Returned value : bool : Returns true if the volume was correctly modified, false in case of error. Example of use : #define INCLUDE_SPEAKER #include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; if(sound.setVolume(50.0f) == true){ std::cout << \"Sucess\" << std::endl; }else{ std::cout << \"Error\" << std::endl; } return 0; } Method : isMuted() Description : Returns whether the audio device is currently muted or not. This function checks if the sound is muted and returns a boolean value. Settings : None : No parameters.. Returned value : bool : Returns true if the audio is muted, false if it is not muted. Example of use : #define INCLUDE_SPEAKER #include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; if (sound.isMuted() == true){ std::cout << \"The audio is muted.\" << std::endl; }else{ std::cout << \"The audio is not muted.\" << std::endl; } return 0; } Method : setMute() Description : Sets the mute status of the audio device. This function allows you to mute or unmute the audio depending on the value passed to it. Settings : bool mute : A boolean value. Pass true to mute the audio, or false to unmute it. Returned value : bool : Returns true if the mute status was successfully set, false in case of an error. Example of use : #define INCLUDE_SPEAKER #include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; // Mute the audio if (sound.setMute(true)){ std::cout << \"The audio has been muted.\" << std::endl; }else{ std::cout << \"Failed to mute the audio.\" << std::endl; } // Unmute the audio if (sound.setMute(false)){ std::cout << \"The audio has been unmuted.\" << std::endl; }else{ std::cout << \"Failed to unmute the audio.\" << std::endl; } return 0; }","title":"Speaker Module"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#speaker-module","text":"","title":"Speaker Module"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#description","text":"The Speaker module allows you to manage the PC volume simply and efficiently.","title":"Description"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#features","text":"Retrieve the current volume. Check the volume state to determine if it is muted or not. Modify the volume state (mute or unmute). Adjust the volume level between 0.0f and 100.0f .","title":"Features"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#compilation","text":"To use the Speaker module, you must compile your program with the following options: g++ -o test.exe test.cpp -lTorixyna -lole32 -lstdc++ -luuid & color","title":"Compilation"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#method-getvolume","text":"Description : Allows you to retrieve the current volume value.","title":"Method : getVolume()"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#settings","text":"None : No settings.","title":"Settings :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#returned-value","text":"float : Returns the current volume.","title":"Returned value :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#example-of-use","text":"#define INCLUDE_SPEAKER #include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; float resultat = sound.getVolume(); std::cout << resultat << std::endl; return 0; }","title":"Example of use :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#_1","text":"","title":""},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#method-setvolume","text":"Description : Allows you to set the volume level of the audio device. This function takes a float number between 0 and 100, representing volume as a percentage.","title":"Method : setVolume()"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#settings_1","text":"float volume : The volume to define must be a number between 0.0 and 100.0 (inclusive).","title":"Settings :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#returned-value_1","text":"bool : Returns true if the volume was correctly modified, false in case of error.","title":"Returned value :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#example-of-use_1","text":"#define INCLUDE_SPEAKER #include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; if(sound.setVolume(50.0f) == true){ std::cout << \"Sucess\" << std::endl; }else{ std::cout << \"Error\" << std::endl; } return 0; }","title":"Example of use :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#_2","text":"","title":""},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#method-ismuted","text":"Description : Returns whether the audio device is currently muted or not. This function checks if the sound is muted and returns a boolean value.","title":"Method : isMuted()"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#settings_2","text":"None : No parameters..","title":"Settings :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#returned-value_2","text":"bool : Returns true if the audio is muted, false if it is not muted.","title":"Returned value :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#example-of-use_2","text":"#define INCLUDE_SPEAKER #include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; if (sound.isMuted() == true){ std::cout << \"The audio is muted.\" << std::endl; }else{ std::cout << \"The audio is not muted.\" << std::endl; } return 0; }","title":"Example of use :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#_3","text":"","title":""},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#method-setmute","text":"Description : Sets the mute status of the audio device. This function allows you to mute or unmute the audio depending on the value passed to it.","title":"Method : setMute()"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#settings_3","text":"bool mute : A boolean value. Pass true to mute the audio, or false to unmute it.","title":"Settings :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#returned-value_3","text":"bool : Returns true if the mute status was successfully set, false in case of an error.","title":"Returned value :"},{"location":"Torixyna/1.0.0/Speaker/Speaker.html#example-of-use_3","text":"#define INCLUDE_SPEAKER #include <Torixyna/Torixyna.hpp> int main(){ Torixyna::Speaker::Speaker sound; // Mute the audio if (sound.setMute(true)){ std::cout << \"The audio has been muted.\" << std::endl; }else{ std::cout << \"Failed to mute the audio.\" << std::endl; } // Unmute the audio if (sound.setMute(false)){ std::cout << \"The audio has been unmuted.\" << std::endl; }else{ std::cout << \"Failed to unmute the audio.\" << std::endl; } return 0; }","title":"Example of use :"}]}